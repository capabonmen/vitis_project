

================================================================
== Vitis HLS Report for 'convex_hull_accel_Pipeline_VITIS_LOOP_47_3_VITIS_LOOP_49_4'
================================================================
* Date:           Mon Jun 23 18:15:02 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        convex_hull.prj
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.666 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-------+---------+
    |  Latency (cycles) |  Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max   | min |  max  |   Type  |
    +---------+---------+-----------+----------+-----+-------+---------+
    |        5|    16388|  50.000 ns|  0.164 ms|    5|  16388|       no|
    +---------+---------+-----------+----------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+-----------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  |    Trip   |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  |   Count   | Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+-----------+----------+
        |- VITIS_LOOP_47_3_VITIS_LOOP_49_4  |        3|    16386|         3|          1|          1|  1 ~ 16384|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.25>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%c = alloca i32 1" [./accel.cpp:49]   --->   Operation 6 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%r = alloca i32 1" [./accel.cpp:47]   --->   Operation 7 'alloca' 'r' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten9 = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%count = alloca i32 1" [./accel.cpp:46]   --->   Operation 9 'alloca' 'count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %in_img_data, void @empty_8, i32 0, i32 0, void @empty_16, i32 0, i32 0, void @empty_16, void @empty_16, void @empty_16, i32 0, i32 0, i32 0, i32 0, void @empty_16, void @empty_16, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %empty"   --->   Operation 11 'read' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%bound_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %bound"   --->   Operation 12 'read' 'bound_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.58ns)   --->   "%store_ln46 = store i32 0, i32 %count" [./accel.cpp:46]   --->   Operation 13 'store' 'store_ln46' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%store_ln0 = store i16 0, i16 %indvar_flatten9"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln47 = store i8 0, i8 %r" [./accel.cpp:47]   --->   Operation 15 'store' 'store_ln47' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln49 = store i8 0, i8 %c" [./accel.cpp:49]   --->   Operation 16 'store' 'store_ln49' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body19"   --->   Operation 17 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%indvar_flatten9_load = load i16 %indvar_flatten9" [./accel.cpp:47]   --->   Operation 18 'load' 'indvar_flatten9_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (2.07ns)   --->   "%icmp_ln47 = icmp_eq  i16 %indvar_flatten9_load, i16 %bound_read" [./accel.cpp:47]   --->   Operation 19 'icmp' 'icmp_ln47' <Predicate = true> <Delay = 2.07> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (2.07ns)   --->   "%add_ln47 = add i16 %indvar_flatten9_load, i16 1" [./accel.cpp:47]   --->   Operation 20 'add' 'add_ln47' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln47 = br i1 %icmp_ln47, void %for.inc29.loopexit, void %for.end31.loopexit.exitStub" [./accel.cpp:47]   --->   Operation 21 'br' 'br_ln47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln47 = store i16 %add_ln47, i16 %indvar_flatten9" [./accel.cpp:47]   --->   Operation 22 'store' 'store_ln47' <Predicate = (!icmp_ln47)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 5.54>
ST_2 : Operation 23 [1/1] (3.63ns)   --->   "%pix = read i8 @_ssdm_op_Read.ap_fifo.volatile.i8P0A, i8 %in_img_data" [D:/Xilinx/Vitis_Libraries/vision/L1/include/common/xf_structs.hpp:542->./accel.cpp:52]   --->   Operation 23 'read' 'pix' <Predicate = (!icmp_ln47)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 2> <FIFO>
ST_2 : Operation 24 [1/1] (1.91ns)   --->   "%icmp_ln53 = icmp_ne  i8 %pix, i8 0" [./accel.cpp:53]   --->   Operation 24 'icmp' 'icmp_ln53' <Predicate = (!icmp_ln47)> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.66>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%count_2 = load i32 %count" [./accel.cpp:49]   --->   Operation 25 'load' 'count_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%c_load = load i8 %c" [./accel.cpp:49]   --->   Operation 26 'load' 'c_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%r_load = load i8 %r" [./accel.cpp:47]   --->   Operation 27 'load' 'r_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_47_3_VITIS_LOOP_49_4_str"   --->   Operation 28 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1, i64 16384, i64 4096"   --->   Operation 29 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.91ns)   --->   "%icmp_ln49 = icmp_eq  i8 %c_load, i8 %tmp" [./accel.cpp:49]   --->   Operation 30 'icmp' 'icmp_ln49' <Predicate = (!icmp_ln47)> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (1.24ns)   --->   "%select_ln47 = select i1 %icmp_ln49, i8 0, i8 %c_load" [./accel.cpp:47]   --->   Operation 31 'select' 'select_ln47' <Predicate = (!icmp_ln47)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (1.91ns)   --->   "%add_ln47_1 = add i8 %r_load, i8 1" [./accel.cpp:47]   --->   Operation 32 'add' 'add_ln47_1' <Predicate = (!icmp_ln47)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (1.24ns)   --->   "%select_ln47_1 = select i1 %icmp_ln49, i8 %add_ln47_1, i8 %r_load" [./accel.cpp:47]   --->   Operation 33 'select' 'select_ln47_1' <Predicate = (!icmp_ln47)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i8 %select_ln47_1" [./accel.cpp:47]   --->   Operation 34 'zext' 'zext_ln47' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i8 %select_ln47" [./accel.cpp:49]   --->   Operation 35 'zext' 'zext_ln49_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln49 = trunc i32 %count_2" [./accel.cpp:49]   --->   Operation 36 'trunc' 'trunc_ln49' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%specpipeline_ln51 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_16" [./accel.cpp:51]   --->   Operation 37 'specpipeline' 'specpipeline_ln51' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %count_2, i32 2, i32 5" [./accel.cpp:49]   --->   Operation 38 'partselect' 'lshr_ln' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i4 %lshr_ln" [./accel.cpp:49]   --->   Operation 39 'zext' 'zext_ln49' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %count_2, i32 6, i32 31" [./accel.cpp:53]   --->   Operation 40 'partselect' 'tmp_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (2.37ns)   --->   "%icmp_ln53_1 = icmp_slt  i26 %tmp_1, i26 1" [./accel.cpp:53]   --->   Operation 41 'icmp' 'icmp_ln53_1' <Predicate = (!icmp_ln47)> <Delay = 2.37> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.37> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.97ns)   --->   "%and_ln53 = and i1 %icmp_ln53_1, i1 %icmp_ln53" [./accel.cpp:53]   --->   Operation 42 'and' 'and_ln53' <Predicate = (!icmp_ln47)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln53 = br i1 %and_ln53, void %for.inc26, void %if.then" [./accel.cpp:53]   --->   Operation 43 'br' 'br_ln53' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (2.55ns)   --->   "%count_3 = add i32 %count_2, i32 1" [./accel.cpp:54]   --->   Operation 44 'add' 'count_3' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%pts_x_addr = getelementptr i32 %pts_x, i64 0, i64 %zext_ln49" [./accel.cpp:54]   --->   Operation 45 'getelementptr' 'pts_x_addr' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%pts_x_1_addr = getelementptr i32 %pts_x_1, i64 0, i64 %zext_ln49" [./accel.cpp:54]   --->   Operation 46 'getelementptr' 'pts_x_1_addr' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%pts_x_2_addr = getelementptr i32 %pts_x_2, i64 0, i64 %zext_ln49" [./accel.cpp:54]   --->   Operation 47 'getelementptr' 'pts_x_2_addr' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%pts_x_3_addr = getelementptr i32 %pts_x_3, i64 0, i64 %zext_ln49" [./accel.cpp:54]   --->   Operation 48 'getelementptr' 'pts_x_3_addr' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%pts_y_addr = getelementptr i32 %pts_y, i64 0, i64 %zext_ln49" [./accel.cpp:54]   --->   Operation 49 'getelementptr' 'pts_y_addr' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%pts_y_1_addr = getelementptr i32 %pts_y_1, i64 0, i64 %zext_ln49" [./accel.cpp:54]   --->   Operation 50 'getelementptr' 'pts_y_1_addr' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%pts_y_2_addr = getelementptr i32 %pts_y_2, i64 0, i64 %zext_ln49" [./accel.cpp:54]   --->   Operation 51 'getelementptr' 'pts_y_2_addr' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%pts_y_3_addr = getelementptr i32 %pts_y_3, i64 0, i64 %zext_ln49" [./accel.cpp:54]   --->   Operation 52 'getelementptr' 'pts_y_3_addr' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (1.86ns)   --->   "%switch_ln54 = switch i2 %trunc_ln49, void %arrayidx25.180.case.3, i2 0, void %arrayidx25.180.case.0, i2 1, void %arrayidx25.180.case.1, i2 2, void %arrayidx25.180.case.2" [./accel.cpp:54]   --->   Operation 53 'switch' 'switch_ln54' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 1.86>
ST_3 : Operation 54 [1/1] (2.32ns)   --->   "%store_ln54 = store i32 %zext_ln49_1, i4 %pts_x_2_addr" [./accel.cpp:54]   --->   Operation 54 'store' 'store_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 2)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 55 [1/1] (2.32ns)   --->   "%store_ln54 = store i32 %zext_ln47, i4 %pts_y_2_addr" [./accel.cpp:54]   --->   Operation 55 'store' 'store_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 2)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx25.180.exit" [./accel.cpp:54]   --->   Operation 56 'br' 'br_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 2)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (2.32ns)   --->   "%store_ln54 = store i32 %zext_ln49_1, i4 %pts_x_1_addr" [./accel.cpp:54]   --->   Operation 57 'store' 'store_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 1)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 58 [1/1] (2.32ns)   --->   "%store_ln54 = store i32 %zext_ln47, i4 %pts_y_1_addr" [./accel.cpp:54]   --->   Operation 58 'store' 'store_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 1)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx25.180.exit" [./accel.cpp:54]   --->   Operation 59 'br' 'br_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 1)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (2.32ns)   --->   "%store_ln54 = store i32 %zext_ln49_1, i4 %pts_x_addr" [./accel.cpp:54]   --->   Operation 60 'store' 'store_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 0)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 61 [1/1] (2.32ns)   --->   "%store_ln54 = store i32 %zext_ln47, i4 %pts_y_addr" [./accel.cpp:54]   --->   Operation 61 'store' 'store_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 0)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx25.180.exit" [./accel.cpp:54]   --->   Operation 62 'br' 'br_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 0)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (2.32ns)   --->   "%store_ln54 = store i32 %zext_ln49_1, i4 %pts_x_3_addr" [./accel.cpp:54]   --->   Operation 63 'store' 'store_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 3)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 64 [1/1] (2.32ns)   --->   "%store_ln54 = store i32 %zext_ln47, i4 %pts_y_3_addr" [./accel.cpp:54]   --->   Operation 64 'store' 'store_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 3)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx25.180.exit" [./accel.cpp:54]   --->   Operation 65 'br' 'br_ln54' <Predicate = (!icmp_ln47 & and_ln53 & trunc_ln49 == 3)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (1.58ns)   --->   "%store_ln46 = store i32 %count_3, i32 %count" [./accel.cpp:46]   --->   Operation 66 'store' 'store_ln46' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 1.58>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln55 = br void %for.inc26" [./accel.cpp:55]   --->   Operation 67 'br' 'br_ln55' <Predicate = (!icmp_ln47 & and_ln53)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (1.91ns)   --->   "%c_1 = add i8 %select_ln47, i8 1" [./accel.cpp:49]   --->   Operation 68 'add' 'c_1' <Predicate = (!icmp_ln47)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (1.58ns)   --->   "%store_ln47 = store i8 %select_ln47_1, i8 %r" [./accel.cpp:47]   --->   Operation 69 'store' 'store_ln47' <Predicate = (!icmp_ln47)> <Delay = 1.58>
ST_3 : Operation 70 [1/1] (1.58ns)   --->   "%store_ln49 = store i8 %c_1, i8 %c" [./accel.cpp:49]   --->   Operation 70 'store' 'store_ln49' <Predicate = (!icmp_ln47)> <Delay = 1.58>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln49 = br void %for.body19" [./accel.cpp:49]   --->   Operation 71 'br' 'br_ln49' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%write_ln49 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %count_out, i32 %count_2" [./accel.cpp:49]   --->   Operation 72 'write' 'write_ln49' <Predicate = (icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 73 'ret' 'ret_ln0' <Predicate = (icmp_ln47)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.253ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten9' [21]  (1.588 ns)
	'load' operation 16 bit ('indvar_flatten9_load', ./accel.cpp:47) on local variable 'indvar_flatten9' [26]  (0.000 ns)
	'add' operation 16 bit ('add_ln47', ./accel.cpp:47) [29]  (2.077 ns)
	'store' operation 0 bit ('store_ln47', ./accel.cpp:47) of variable 'add_ln47', ./accel.cpp:47 on local variable 'indvar_flatten9' [84]  (1.588 ns)

 <State 2>: 5.549ns
The critical path consists of the following:
	fifo read operation ('pix', D:/Xilinx/Vitis_Libraries/vision/L1/include/common/xf_structs.hpp:542->./accel.cpp:52) on port 'in_img_data' (D:/Xilinx/Vitis_Libraries/vision/L1/include/common/xf_structs.hpp:542->./accel.cpp:52) [46]  (3.634 ns)
	'icmp' operation 1 bit ('icmp_ln53', ./accel.cpp:53) [47]  (1.915 ns)

 <State 3>: 6.666ns
The critical path consists of the following:
	'load' operation 8 bit ('c_load', ./accel.cpp:49) on local variable 'c', ./accel.cpp:49 [32]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln49', ./accel.cpp:49) [36]  (1.915 ns)
	'select' operation 8 bit ('select_ln47', ./accel.cpp:47) [37]  (1.248 ns)
	'add' operation 8 bit ('c', ./accel.cpp:49) [83]  (1.915 ns)
	'store' operation 0 bit ('store_ln49', ./accel.cpp:49) of variable 'c', ./accel.cpp:49 on local variable 'c', ./accel.cpp:49 [86]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A



================================================================
== Vitis HLS Report for 'convex_hull_accel_Pipeline_VITIS_LOOP_143_17'
================================================================
* Date:           Mon Jun 23 18:38:51 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        convex_hull.prj
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.701 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max   | min | max |   Type  |
    +---------+---------+-----------+----------+-----+-----+---------+
    |        5|       68|  50.000 ns|  0.680 us|    5|   68|       no|
    +---------+---------+-----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_143_17  |        3|       66|         4|          1|          1|  1 ~ 64|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.72>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [./accel.cpp:143]   --->   Operation 7 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %out_img_data, void @empty_8, i32 0, i32 0, void @empty_16, i32 0, i32 0, void @empty_16, void @empty_16, void @empty_16, i32 0, i32 0, i32 0, i32 0, void @empty_16, void @empty_16, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%rows_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %rows"   --->   Operation 9 'read' 'rows_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%cols_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %cols"   --->   Operation 10 'read' 'cols_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%hs_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %hs"   --->   Operation 11 'read' 'hs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln143 = store i31 0, i31 %i" [./accel.cpp:143]   --->   Operation 12 'store' 'store_ln143' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body214"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i_1 = load i31 %i" [./accel.cpp:143]   --->   Operation 14 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln143 = zext i31 %i_1" [./accel.cpp:143]   --->   Operation 15 'zext' 'zext_ln143' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (2.55ns)   --->   "%icmp_ln143 = icmp_slt  i32 %zext_ln143, i32 %hs_read" [./accel.cpp:143]   --->   Operation 16 'icmp' 'icmp_ln143' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (2.52ns)   --->   "%add_ln143 = add i31 %i_1, i31 1" [./accel.cpp:143]   --->   Operation 17 'add' 'add_ln143' <Predicate = true> <Delay = 2.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln143 = br i1 %icmp_ln143, void %VITIS_LOOP_154_18.loopexit.exitStub, void %for.body214.split" [./accel.cpp:143]   --->   Operation 18 'br' 'br_ln143' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%trunc_ln143 = trunc i31 %i_1" [./accel.cpp:143]   --->   Operation 19 'trunc' 'trunc_ln143' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%lshr_ln9 = partselect i4 @_ssdm_op_PartSelect.i4.i31.i32.i32, i31 %i_1, i32 2, i32 5" [./accel.cpp:143]   --->   Operation 20 'partselect' 'lshr_ln9' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln143_1 = zext i4 %lshr_ln9" [./accel.cpp:143]   --->   Operation 21 'zext' 'zext_ln143_1' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%hull_x_addr = getelementptr i32 %hull_x, i64 0, i64 %zext_ln143_1" [./accel.cpp:146]   --->   Operation 22 'getelementptr' 'hull_x_addr' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%hull_x_1_addr = getelementptr i32 %hull_x_1, i64 0, i64 %zext_ln143_1" [./accel.cpp:146]   --->   Operation 23 'getelementptr' 'hull_x_1_addr' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%hull_x_2_addr = getelementptr i32 %hull_x_2, i64 0, i64 %zext_ln143_1" [./accel.cpp:146]   --->   Operation 24 'getelementptr' 'hull_x_2_addr' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%hull_x_3_addr = getelementptr i32 %hull_x_3, i64 0, i64 %zext_ln143_1" [./accel.cpp:146]   --->   Operation 25 'getelementptr' 'hull_x_3_addr' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%hull_y_addr = getelementptr i32 %hull_y, i64 0, i64 %zext_ln143_1" [./accel.cpp:146]   --->   Operation 26 'getelementptr' 'hull_y_addr' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%hull_y_1_addr = getelementptr i32 %hull_y_1, i64 0, i64 %zext_ln143_1" [./accel.cpp:146]   --->   Operation 27 'getelementptr' 'hull_y_1_addr' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%hull_y_2_addr = getelementptr i32 %hull_y_2, i64 0, i64 %zext_ln143_1" [./accel.cpp:146]   --->   Operation 28 'getelementptr' 'hull_y_2_addr' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%hull_y_3_addr = getelementptr i32 %hull_y_3, i64 0, i64 %zext_ln143_1" [./accel.cpp:146]   --->   Operation 29 'getelementptr' 'hull_y_3_addr' <Predicate = (icmp_ln143)> <Delay = 0.00>
ST_1 : Operation 30 [2/2] (2.32ns)   --->   "%hull_x_load = load i4 %hull_x_addr" [./accel.cpp:146]   --->   Operation 30 'load' 'hull_x_load' <Predicate = (icmp_ln143)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 31 [2/2] (2.32ns)   --->   "%hull_x_1_load = load i4 %hull_x_1_addr" [./accel.cpp:146]   --->   Operation 31 'load' 'hull_x_1_load' <Predicate = (icmp_ln143)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 32 [2/2] (2.32ns)   --->   "%hull_x_2_load = load i4 %hull_x_2_addr" [./accel.cpp:146]   --->   Operation 32 'load' 'hull_x_2_load' <Predicate = (icmp_ln143)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 33 [2/2] (2.32ns)   --->   "%hull_x_3_load = load i4 %hull_x_3_addr" [./accel.cpp:146]   --->   Operation 33 'load' 'hull_x_3_load' <Predicate = (icmp_ln143)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 34 [2/2] (2.32ns)   --->   "%hull_y_load = load i4 %hull_y_addr" [./accel.cpp:146]   --->   Operation 34 'load' 'hull_y_load' <Predicate = (icmp_ln143)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 35 [2/2] (2.32ns)   --->   "%hull_y_1_load = load i4 %hull_y_1_addr" [./accel.cpp:146]   --->   Operation 35 'load' 'hull_y_1_load' <Predicate = (icmp_ln143)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 36 [2/2] (2.32ns)   --->   "%hull_y_2_load = load i4 %hull_y_2_addr" [./accel.cpp:146]   --->   Operation 36 'load' 'hull_y_2_load' <Predicate = (icmp_ln143)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 37 [2/2] (2.32ns)   --->   "%hull_y_3_load = load i4 %hull_y_3_addr" [./accel.cpp:146]   --->   Operation 37 'load' 'hull_y_3_load' <Predicate = (icmp_ln143)> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 38 [1/1] (1.58ns)   --->   "%store_ln143 = store i31 %add_ln143, i31 %i" [./accel.cpp:143]   --->   Operation 38 'store' 'store_ln143' <Predicate = (icmp_ln143)> <Delay = 1.58>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln143 = br void %for.body214" [./accel.cpp:143]   --->   Operation 39 'br' 'br_ln143' <Predicate = (icmp_ln143)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.70>
ST_2 : Operation 40 [1/2] (2.32ns)   --->   "%hull_x_load = load i4 %hull_x_addr" [./accel.cpp:146]   --->   Operation 40 'load' 'hull_x_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 41 [1/2] (2.32ns)   --->   "%hull_x_1_load = load i4 %hull_x_1_addr" [./accel.cpp:146]   --->   Operation 41 'load' 'hull_x_1_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 42 [1/2] (2.32ns)   --->   "%hull_x_2_load = load i4 %hull_x_2_addr" [./accel.cpp:146]   --->   Operation 42 'load' 'hull_x_2_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 43 [1/2] (2.32ns)   --->   "%hull_x_3_load = load i4 %hull_x_3_addr" [./accel.cpp:146]   --->   Operation 43 'load' 'hull_x_3_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 44 [1/1] (1.82ns)   --->   "%p_x = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.4i32.i32.i2, i2 0, i32 %hull_x_load, i2 1, i32 %hull_x_1_load, i2 2, i32 %hull_x_2_load, i2 3, i32 %hull_x_3_load, i32 0, i2 %trunc_ln143" [./accel.cpp:146]   --->   Operation 44 'sparsemux' 'p_x' <Predicate = true> <Delay = 1.82> <CoreInst = "SparseMux">   --->   Core 135 'SparseMux' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/2] (2.32ns)   --->   "%hull_y_load = load i4 %hull_y_addr" [./accel.cpp:146]   --->   Operation 45 'load' 'hull_y_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 46 [1/2] (2.32ns)   --->   "%hull_y_1_load = load i4 %hull_y_1_addr" [./accel.cpp:146]   --->   Operation 46 'load' 'hull_y_1_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 47 [1/2] (2.32ns)   --->   "%hull_y_2_load = load i4 %hull_y_2_addr" [./accel.cpp:146]   --->   Operation 47 'load' 'hull_y_2_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 48 [1/2] (2.32ns)   --->   "%hull_y_3_load = load i4 %hull_y_3_addr" [./accel.cpp:146]   --->   Operation 48 'load' 'hull_y_3_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 49 [1/1] (1.82ns)   --->   "%p_y = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.4i32.i32.i2, i2 0, i32 %hull_y_load, i2 1, i32 %hull_y_1_load, i2 2, i32 %hull_y_2_load, i2 3, i32 %hull_y_3_load, i32 0, i2 %trunc_ln143" [./accel.cpp:146]   --->   Operation 49 'sparsemux' 'p_y' <Predicate = true> <Delay = 1.82> <CoreInst = "SparseMux">   --->   Core 135 'SparseMux' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (2.55ns)   --->   "%icmp_ln147 = icmp_slt  i32 %p_x, i32 %cols_read" [./accel.cpp:147]   --->   Operation 50 'icmp' 'icmp_ln147' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (2.55ns)   --->   "%icmp_ln147_1 = icmp_slt  i32 %p_y, i32 %rows_read" [./accel.cpp:147]   --->   Operation 51 'icmp' 'icmp_ln147_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 0.99>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%specpipeline_ln144 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_16" [./accel.cpp:144]   --->   Operation 52 'specpipeline' 'specpipeline_ln144' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%speclooptripcount_ln145 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1, i64 64, i64 32" [./accel.cpp:145]   --->   Operation 53 'speclooptripcount' 'speclooptripcount_ln145' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%specloopname_ln143 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [./accel.cpp:143]   --->   Operation 54 'specloopname' 'specloopname_ln143' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node and_ln147_1)   --->   "%or_ln147 = or i32 %p_y, i32 %p_x" [./accel.cpp:147]   --->   Operation 55 'or' 'or_ln147' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node and_ln147_1)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %or_ln147, i32 31" [./accel.cpp:147]   --->   Operation 56 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node and_ln147_1)   --->   "%xor_ln147 = xor i1 %tmp, i1 1" [./accel.cpp:147]   --->   Operation 57 'xor' 'xor_ln147' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node and_ln147_1)   --->   "%and_ln147 = and i1 %icmp_ln147_1, i1 %icmp_ln147" [./accel.cpp:147]   --->   Operation 58 'and' 'and_ln147' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln147_1 = and i1 %and_ln147, i1 %xor_ln147" [./accel.cpp:147]   --->   Operation 59 'and' 'and_ln147_1' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln147 = br i1 %and_ln147_1, void %for.inc235, void %if.then228" [./accel.cpp:147]   --->   Operation 60 'br' 'br_ln147' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 63 'ret' 'ret_ln0' <Predicate = (!icmp_ln143)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 3.63>
ST_4 : Operation 61 [1/1] (3.63ns)   --->   "%write_ln553 = write void @_ssdm_op_Write.ap_fifo.volatile.i8P0A, i8 %out_img_data, i8 255" [D:/Xilinx/Vitis_Libraries/vision/L1/include/common/xf_structs.hpp:553->./accel.cpp:148]   --->   Operation 61 'write' 'write_ln553' <Predicate = (and_ln147_1)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 2> <FIFO>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln149 = br void %for.inc235" [./accel.cpp:149]   --->   Operation 62 'br' 'br_ln149' <Predicate = (and_ln147_1)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.728ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln143', ./accel.cpp:143) of constant 0 on local variable 'i', ./accel.cpp:143 [18]  (1.588 ns)
	'load' operation 31 bit ('i', ./accel.cpp:143) on local variable 'i', ./accel.cpp:143 [21]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln143', ./accel.cpp:143) [23]  (2.552 ns)
	'store' operation 0 bit ('store_ln143', ./accel.cpp:143) of variable 'add_ln143', ./accel.cpp:143 on local variable 'i', ./accel.cpp:143 [63]  (1.588 ns)

 <State 2>: 6.701ns
The critical path consists of the following:
	'load' operation 32 bit ('hull_x_load', ./accel.cpp:146) on array 'hull_x' [41]  (2.322 ns)
	'sparsemux' operation 32 bit ('p.x', ./accel.cpp:146) [45]  (1.827 ns)
	'icmp' operation 1 bit ('icmp_ln147', ./accel.cpp:147) [51]  (2.552 ns)

 <State 3>: 0.993ns
The critical path consists of the following:
	'or' operation 32 bit ('or_ln147', ./accel.cpp:147) [53]  (0.000 ns)
	'xor' operation 1 bit ('xor_ln147', ./accel.cpp:147) [55]  (0.000 ns)
	'and' operation 1 bit ('and_ln147_1', ./accel.cpp:147) [57]  (0.993 ns)

 <State 4>: 3.634ns
The critical path consists of the following:
	fifo write operation ('write_ln553', D:/Xilinx/Vitis_Libraries/vision/L1/include/common/xf_structs.hpp:553->./accel.cpp:148) on port 'out_img_data' (D:/Xilinx/Vitis_Libraries/vision/L1/include/common/xf_structs.hpp:553->./accel.cpp:148) [60]  (3.634 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A



================================================================
== Vitis HLS Report for 'cross_r'
================================================================
* Date:           Mon Jun 23 18:15:03 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        convex_hull.prj
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.912 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        3|        3|  30.000 ns|  30.000 ns|    1|    1|      yes|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.55>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%c_y_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %c_y_val" [./accel.cpp:8]   --->   Operation 5 'read' 'c_y_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%c_x_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %c_x_val" [./accel.cpp:8]   --->   Operation 6 'read' 'c_x_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%b_y_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %b_y_val" [./accel.cpp:8]   --->   Operation 7 'read' 'b_y_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%b_x_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %b_x_val" [./accel.cpp:8]   --->   Operation 8 'read' 'b_x_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%a_y_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %a_y_val" [./accel.cpp:8]   --->   Operation 9 'read' 'a_y_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%a_x_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %a_x_val" [./accel.cpp:8]   --->   Operation 10 'read' 'a_x_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (2.55ns)   --->   "%sub_ln8 = sub i32 %b_x_val_read, i32 %a_x_val_read" [./accel.cpp:8]   --->   Operation 11 'sub' 'sub_ln8' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (2.55ns)   --->   "%sub_ln8_1 = sub i32 %c_y_val_read, i32 %a_y_val_read" [./accel.cpp:8]   --->   Operation 12 'sub' 'sub_ln8_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (2.55ns)   --->   "%sub_ln8_2 = sub i32 %b_y_val_read, i32 %a_y_val_read" [./accel.cpp:8]   --->   Operation 13 'sub' 'sub_ln8_2' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (2.55ns)   --->   "%sub_ln8_3 = sub i32 %c_x_val_read, i32 %a_x_val_read" [./accel.cpp:8]   --->   Operation 14 'sub' 'sub_ln8_3' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 6.91>
ST_2 : Operation 15 [2/2] (6.91ns)   --->   "%mul_ln8 = mul i32 %sub_ln8_1, i32 %sub_ln8" [./accel.cpp:8]   --->   Operation 15 'mul' 'mul_ln8' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [2/2] (6.91ns)   --->   "%mul_ln8_1 = mul i32 %sub_ln8_3, i32 %sub_ln8_2" [./accel.cpp:8]   --->   Operation 16 'mul' 'mul_ln8_1' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 17 [1/2] (6.91ns)   --->   "%mul_ln8 = mul i32 %sub_ln8_1, i32 %sub_ln8" [./accel.cpp:8]   --->   Operation 17 'mul' 'mul_ln8' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 18 [1/2] (6.91ns)   --->   "%mul_ln8_1 = mul i32 %sub_ln8_3, i32 %sub_ln8_2" [./accel.cpp:8]   --->   Operation 18 'mul' 'mul_ln8_1' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 2.55>
ST_4 : Operation 19 [1/1] (2.55ns)   --->   "%sub_ln8_4 = sub i32 %mul_ln8, i32 %mul_ln8_1" [./accel.cpp:8]   --->   Operation 19 'sub' 'sub_ln8_4' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 20 [1/1] (0.00ns)   --->   "%ret_ln8 = ret i32 %sub_ln8_4" [./accel.cpp:8]   --->   Operation 20 'ret' 'ret_ln8' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.552ns
The critical path consists of the following:
	wire read operation ('b_x_val_read', ./accel.cpp:8) on port 'b_x_val' (./accel.cpp:8) [10]  (0.000 ns)
	'sub' operation 32 bit ('sub_ln8', ./accel.cpp:8) [13]  (2.552 ns)

 <State 2>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln8', ./accel.cpp:8) [15]  (6.912 ns)

 <State 3>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln8', ./accel.cpp:8) [15]  (6.912 ns)

 <State 4>: 2.552ns
The critical path consists of the following:
	'sub' operation 32 bit ('sub_ln8_4', ./accel.cpp:8) [19]  (2.552 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
